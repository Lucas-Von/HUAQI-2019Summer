<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="financial_management.data.property.EstateMapper">

    <select id="getPropertyByUser" resultMap="EstatePO">
        select
            coalesce(sum(mf.balance), 0) as fundsInPlatform,
            coalesce(faiop.funds, 0) as fundsOutPlatform,
            coalesce(sum(md.amount), 0) as savingOutPlatform,
            coalesce(sum(mi.price), 0) as insuranceOutPlatform,
            coalesce(sum(ms.hold_total), 0) as stocksInPlatform,
            coalesce(sum(mq.hold_total), 0) as qdiiInPlatform,
            coalesce(sum(mg.sum), 0) as goldInPlatform,
            coalesce(sum(ubf.fund_share * ubf.net_worth), 0) as bondInPlatform,
            coalesce(faiop.invest, 0) as investOutPlatform
        from funds_and_invest_out_platform faiop
            left join my_fund mf on mf.user_id = faiop.user_id
            left join my_depo md on md.user_id = faiop.user_id
            left join my_ins mi on mi.user_id = faiop.user_id
            left join my_qdii mq on mq.user_id = faiop.user_id
            left join my_stock ms on ms.user_id = faiop.user_id
            left join my_gold mg on mg.user_id = faiop.user_id
            left join user_bond_fund ubf on ubf.user_id = faiop.user_id
        where faiop.user_id = #{userId};
    </select>

    <select id="getMonthlyProList" resultMap="FortunePO">
        select user_id as userId, record_date as recordDate, funds, saving, insurance, stocks, qdii, gold, bond
        from fortune
        where user_id = #{userId} and record_date REGEXP "01$";
    </select>

    <select id="getMonthlyInvList" resultMap="InvestPO">
        select user_id as userId, record_date as recordDate, stocks, qdii, gold, bond
        from fortune
        where user_id = #{userId} and record_date REGEXP "01$";
    </select>

    <select id="getDailyProList" resultMap="FortunePO">
        select user_id as userId, record_date as recordDate, funds, saving, insurance, stocks, qdii, gold, bond
        from fortune
        where user_id = #{userId} and DATE_SUB(CURDATE(), INTERVAL 30 DAY);
    </select>

    <select id="getDailyInvList" resultMap="InvestPO">
        select user_id as userId, record_date as recordDate, stocks, qdii, gold, bond
        from fortune
        where user_id = #{userId} and DATE_SUB(CURDATE(), INTERVAL 30 DAY);
    </select>

    <select id="getCompleteProList" resultMap="FortunePO">
        select user_id as userId, record_date as recordDate, funds, saving, insurance, stocks, qdii, gold, bond
        from fortune
        where user_id = #{userId}
    </select>

    <select id="ifExistOutRecord" resultType="boolean">
        select count(user_id) from funds_and_invest_out_platform where user_id = #{userId}
    </select>

    <insert id="insertOutFundsRecord">
        insert into funds_and_invest_out_platform(user_id, funds, invest)
        values(#{userId}, #{fundsOutPlatform}, 0)
    </insert>

    <insert id="updateOutFundsRecord">
        update funds_and_invest_out_platform
        set funds = #{fundsOutPlatform}
        where user_id = #{userId}
    </insert>

    <insert id="insertOutInvestRecord">
        insert into funds_and_invest_out_platform(user_id, funds, invest)
        values(#{userId}, 0, #{investOutPlatform})
    </insert>

    <insert id="updateOutInvestRecord">
        update funds_and_invest_out_platform
        set invest = #{investOutPlatform}
        where user_id = #{userId}
    </insert>

    <select id="getFortuneUpdateTime" resultType="date">
        select Max(record_date) from fortune where user_id = #{userId}
    </select>

    <insert id="updateFortuneByDay">
        insert into fortune(user_id, record_date, funds, saving, insurance, stocks, gold, bond, qdii)
        select
            u.user_id,
            CURDATE(),
            coalesce(sum(mf.balance), 0),
            coalesce(sum(md.amount), 0),
            coalesce(sum(mi.price), 0),
            coalesce(sum(ms.hold_total), 0),
            coalesce(sum(mg.sum), 0),
            coalesce(sum(ubf.fund_share * ubf.net_worth), 0),
            coalesce(sum(mq.hold_total), 0)
        from user u
            left join my_fund mf on mf.user_id = u.user_id
            left join my_depo md on md.user_id = u.user_id
            left join my_ins mi on mi.user_id = u.user_id
            left join my_stock ms on ms.user_id = u.user_id
            left join my_gold mg on mg.user_id = u.user_id
            left join user_bond_fund ubf on ubf.user_id = u.user_id
            left join my_qdii mq on mq.user_id = u.user_id
        where u.user_id != 0
        group by u.user_id
    </insert>

    <resultMap id="EstatePO" type="financial_management.entity.property.EstatePO">
    </resultMap>

    <resultMap id="DepositPO" type="financial_management.entity.property.DepositPO">
    </resultMap>

    <resultMap id="FortunePO" type="financial_management.entity.property.FortunePO">
    </resultMap>

    <resultMap id="InvestPO" type="financial_management.entity.property.InvestPO">
    </resultMap>

</mapper>