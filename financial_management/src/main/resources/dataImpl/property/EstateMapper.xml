<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="financial_management.data.property.EstateMapper">

    <select id="getPropertyByUser" resultMap="EstatePO">
        select
            coalesce(sum(mf.balance), 0) as fundsInPlatform,
            coalesce(q.funds, 0) as fundsOutPlatform,
            coalesce(sum(md.amount), 0) as savingInPlatform,
            coalesce(q.saving, 0) as savingOutPlatform,
            coalesce(sum(mi.price), 0) as insuranceInPlatform,
            coalesce(q.insurance, 0) as insuranceOutPlatform,
            coalesce(sum(ms.amount), 0) as stocksInPlatform,
            coalesce(q.stocks, 0) as stocksOutPlatform,
            coalesce(sum(mg.sum), 0) as goldInPlatform,
            coalesce(q.gold, 0) as goldOutPlatform,
            coalesce(sum(mb.amount), 0) as bondInPlatform,
            coalesce(q.bond, 0) as bondOutPlatform
        from questionnaire q, my_fund mf, my_depo md, my_ins mi, my_stock ms, my_gold mg, my_bond mb
        where q.user_id = #{userId} and mf.user_id = #{userId} and md.user_id = #{userId} and mi.user_id = #{userId}
            and ms.user_id = #{userId} and mg.user_id = #{userId} and mb.user_id = #{userId};
    </select>

    <select id="getTotalIncome" resultType="Double">
        select coalesce(sum(ms.profit + mg.profit + mb.profit), 0)
        from my_stock ms, my_gold mg, my_bond mb
        where ms.user_id = #{userId} and mg.user_id = #{userId} and mb.user_id = #{userId};
    </select>

    <select id="getNewlyIncome" resultMap="RecentInvPO">
        select
            coalesce(today.stocks, 0) as todayStocks,
            coalesce(today.gold, 0) as todayGold,
            coalesce(today.bond, 0) as todayBond,
            coalesce(yesterday.stocks, 0) as yesterdayStocks,
            coalesce(yesterday.gold, 0) as yesterdayGold,
            coalesce(yesterday.bond, 0) as yesterdayBond
        from
            (select stocks, gold, bond
                from fortune
                where user_id = #{userId} and record_date = CURDATE()) today,
            (select stocks, gold, bond
                from fortune
                where user_id = #{userId} and record_date = DATE_SUB(CURDATE(), INTERVAL 1 DAY)) yesterday
    </select>

    <select id="getDepositList" resultMap="DepositPO">
        select
            d.name as name,
            md.amount as money,
            d.rate as annualizedRate,
            md.maturity as expirationDate
        from my_depo md
        inner join deposit_product d
        on md.product_id = d.id
        where md.user_id = #{userId}
    </select>

    <select id="getMonthlyProList" resultMap="FortunePO">
        select user_id as userId, record_date as recordDate, funds, saving, insurance, stocks, gold, bond
        from fortune
        where user_id = #{userId} and record_date REGEXP "01$";
    </select>

    <select id="getMonthlyInvList" resultMap="InvestPO">
        select user_id as userId, record_date as recordDate, stocks, gold, bond
        from fortune
        where user_id = #{userId} and record_date REGEXP "01$";
    </select>

    <select id="getDailyProList" resultMap="FortunePO">
        select user_id as userId, record_date as recordDate, funds, saving, insurance, stocks, gold, bond
        from fortune
        where user_id = #{userId} and DATE_SUB(CURDATE(), INTERVAL 30 DAY);
    </select>

    <select id="getDailyInvList" resultMap="InvestPO">
        select user_id as userId, record_date as recordDate, stocks, gold, bond
        from fortune
        where user_id = #{userId} and DATE_SUB(CURDATE(), INTERVAL 30 DAY);
    </select>

    <select id="getCompleteProList" resultMap="FortunePO">
        select user_id as userId, record_date as recordDate, funds, saving, insurance, stocks, gold, bond
        from fortune
        where user_id = #{userId}
    </select>

    <select id="getFortuneUpdateTime" resultType="date">
        select Max(record_date) from fortune where user_id = #{userId}
    </select>

    <resultMap id="EstatePO" type="financial_management.entity.property.EstatePO">
    </resultMap>

    <resultMap id="RecentInvPO" type="financial_management.entity.property.RecentInvPO">
    </resultMap>

    <resultMap id="DepositPO" type="financial_management.entity.property.DepositPO">
    </resultMap>

    <resultMap id="FortunePO" type="financial_management.entity.property.FortunePO">
    </resultMap>

    <resultMap id="InvestPO" type="financial_management.entity.property.InvestPO">
    </resultMap>

    <insert id="updateFortuneByDay">
        insert into fortune(user_id,record_date,funds,saving,insurance,stocks,gold,bond)
        select
            u.user_id,
            CURDATE(),
            coalesce(sum(mf.balance), 0),
            coalesce(sum(md.amount), 0),
            coalesce(sum(mi.price), 0),
            coalesce(sum(ms.purchase_total), 0),
            coalesce(sum(mg.sum), 0),
            coalesce(sum(mb.purchase_price), 0)
        from user u
            left join my_fund mf on mf.user_id = u.user_id
            left join my_depo md on md.user_id = u.user_id
            left join my_ins mi on mi.user_id = u.user_id
            left join my_stock ms on ms.user_id = u.user_id
            left join my_gold mg on mg.user_id = u.user_id
            left join my_bond mb on mb.user_id = u.user_id
        group by u.user_id
    </insert>

</mapper>